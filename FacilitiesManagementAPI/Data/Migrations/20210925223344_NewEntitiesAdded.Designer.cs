// <auto-generated />
using System;
using FacilitiesManagementAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FacilitiesManagementAPI.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210925223344_NewEntitiesAdded")]
    partial class NewEntitiesAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("FacilitiesManagementAPI.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("KnownAs")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FacilitiesManagementAPI.Entities.Contractor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BusinessName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ContractorTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<int>("GreenLightId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber1")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber2")
                        .HasColumnType("TEXT");

                    b.Property<int>("PremisesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Contractors");
                });

            modelBuilder.Entity("FacilitiesManagementAPI.Entities.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContractorId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NoteContent")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PremiseCertId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PremisesCertId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PremisesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ContractorId");

                    b.HasIndex("PremiseCertId");

                    b.HasIndex("PremisesId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("FacilitiesManagementAPI.Entities.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AppUserId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsMain")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PublicId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("FacilitiesManagementAPI.Entities.Premises", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhoneNumber1")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber2")
                        .HasColumnType("TEXT");

                    b.Property<string>("PremiseName")
                        .HasColumnType("TEXT");

                    b.Property<int>("PremisesAdrressId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Premises");
                });

            modelBuilder.Entity("FacilitiesManagementAPI.Entities.PremisesCertificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateAssessed")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DatePassed")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Pass")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PremisesId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ReminderDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PremisesId");

                    b.ToTable("PremisesCertificate");
                });

            modelBuilder.Entity("FacilitiesManagementAPI.Entities.PremisesTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ContractorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripiton")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NoteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PremisesId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PropertyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ContractorId");

                    b.HasIndex("PremisesId");

                    b.ToTable("PremisesTask");
                });

            modelBuilder.Entity("FacilitiesManagementAPI.Entities.Note", b =>
                {
                    b.HasOne("FacilitiesManagementAPI.Entities.Contractor", "Contractor")
                        .WithMany("Notes")
                        .HasForeignKey("ContractorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FacilitiesManagementAPI.Entities.PremisesCertificate", "PremiseCert")
                        .WithMany()
                        .HasForeignKey("PremiseCertId");

                    b.HasOne("FacilitiesManagementAPI.Entities.Premises", "Premises")
                        .WithMany("Notes")
                        .HasForeignKey("PremisesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contractor");

                    b.Navigation("PremiseCert");

                    b.Navigation("Premises");
                });

            modelBuilder.Entity("FacilitiesManagementAPI.Entities.Photo", b =>
                {
                    b.HasOne("FacilitiesManagementAPI.Entities.AppUser", "AppUser")
                        .WithMany("Photos")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("FacilitiesManagementAPI.Entities.PremisesCertificate", b =>
                {
                    b.HasOne("FacilitiesManagementAPI.Entities.Premises", "Premises")
                        .WithMany("PremiseCerts")
                        .HasForeignKey("PremisesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Premises");
                });

            modelBuilder.Entity("FacilitiesManagementAPI.Entities.PremisesTask", b =>
                {
                    b.HasOne("FacilitiesManagementAPI.Entities.Contractor", null)
                        .WithMany("Jobs")
                        .HasForeignKey("ContractorId");

                    b.HasOne("FacilitiesManagementAPI.Entities.Premises", null)
                        .WithMany("Jobs")
                        .HasForeignKey("PremisesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FacilitiesManagementAPI.Entities.AppUser", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("FacilitiesManagementAPI.Entities.Contractor", b =>
                {
                    b.Navigation("Jobs");

                    b.Navigation("Notes");
                });

            modelBuilder.Entity("FacilitiesManagementAPI.Entities.Premises", b =>
                {
                    b.Navigation("Jobs");

                    b.Navigation("Notes");

                    b.Navigation("PremiseCerts");
                });
#pragma warning restore 612, 618
        }
    }
}
